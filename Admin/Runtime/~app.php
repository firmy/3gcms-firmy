<?php  function deldir($dirname) { if(file_exists($dirname)) { $dir = opendir($dirname); while($filename = readdir($dir)) { if($filename != "." && $filename != "..") { $file = $dirname."/".$filename; if(is_dir($file)) { deldir($file); } else { @unlink($file); } } } closedir($dir); rmdir($dirname); } } function alert($msg,$url) { header('Content-type: text/html; charset=utf-8'); $msg = str_replace("'","\\'",$msg); $str = '<script>'; $str.="alert('".$msg."');"; switch($url) { case 1: $s = 'window.history.go(-1);'; break; case 2: $s = 'window.history.go(-2);'; break; case 3: $s = 'self.close();'; break; default: $s = "location.href='{$url}';"; } $str.=$s; $str.='</script>'; exit($str); } function read_file($l1) { return @file_get_contents($l1); } function write_file($l1, $l2=''){ $dir = dirname($l1); if(!is_dir($dir)){ mkdirss($dir); } return @file_put_contents($l1, $l2); } function mkdirss($dirs,$mode=0777) { if(!is_dir($dirs)){ mkdirss(dirname($dirs), $mode); return @mkdir($dirs, $mode); } return true; } function arr2file($filename, $arr=''){ if(is_array($arr)){ $con = var_export($arr,true); } else{ $con = $arr; } $con = "<?php\nreturn $con;\n?>"; write_file($filename, $con); } function msubstr($str, $start=0, $length, $charset="utf-8", $suffix=true) { if(function_exists("mb_substr")) return mb_substr($str, $start, $length, $charset); elseif(function_exists('iconv_substr')) { return iconv_substr($str,$start,$length,$charset); } $re['utf-8'] = "/[\x01-\x7f]|[\xc2-\xdf][\x80-\xbf]|[\xe0-\xef][\x80-\xbf]{2}|[\xf0-\xff][\x80-\xbf]{3}/"; $re['gb2312'] = "/[\x01-\x7f]|[\xb0-\xf7][\xa0-\xfe]/"; $re['gbk'] = "/[\x01-\x7f]|[\x81-\xfe][\x40-\xfe]/"; $re['big5'] = "/[\x01-\x7f]|[\x81-\xfe]([\x40-\x7e]|\xa1-\xfe])/"; preg_match_all($re[$charset], $str, $match); $slice = join("",array_slice($match[0], $start, $length)); if($suffix) return $slice."…"; return $slice; } function getdirsize($dir) { $dirlist = opendir($dir); while (false !== ($folderorfile = readdir($dirlist))) { if($folderorfile != "." && $folderorfile != "..") { if (is_dir("$dir/$folderorfile")) { $dirsize += getdirsize("$dir/$folderorfile"); } else { $dirsize += filesize("$dir/$folderorfile"); } } } closedir($dirlist); return $dirsize; } function get_client_ip() { if (getenv("HTTP_CLIENT_IP") && strcasecmp(getenv("HTTP_CLIENT_IP"), "unknown")) $ip = getenv("HTTP_CLIENT_IP"); else if (getenv("HTTP_X_FORWARDED_FOR") && strcasecmp(getenv("HTTP_X_FORWARDED_FOR"), "unknown")) $ip = getenv("HTTP_X_FORWARDED_FOR"); else if (getenv("REMOTE_ADDR") && strcasecmp(getenv("REMOTE_ADDR"), "unknown")) $ip = getenv("REMOTE_ADDR"); else if (isset($_SERVER['REMOTE_ADDR']) && $_SERVER['REMOTE_ADDR'] && strcasecmp($_SERVER['REMOTE_ADDR'], "unknown")) $ip = $_SERVER['REMOTE_ADDR']; else $ip = "unknown"; return($ip); } function wk_url_repalce($xmlurl,$order='asc') { if($order=='asc') { return str_replace(array('|','@','#'),array('/','=','&'),$xmlurl); } else { return str_replace(array('/','=','&'),array('|','@','#'),$xmlurl); } } function list_sort_by($list,$field, $sortby='asc') { if(is_array($list)) { $refer = $resultSet = array(); foreach ($list as $i => $data) { $refer[$i] = &$data[$field]; } switch ($sortby) { case 'asc': asort($refer); break; case 'desc': arsort($refer); break; case 'nat': natcasesort($refer); break; } foreach ( $refer as $key=> $val) { $resultSet[] = &$list[$key]; } return $resultSet; } return false; } function getcolordate($type='Y-m-d H:i:s',$time,$color='red') { if((time()-$time)>86400) { return date($type,$time); } else { return '<font color="'.$color.'">'.date($type,$time).'</font>'; } } function byte_format($size, $dec=2) { $a = array("B", "KB", "MB", "GB", "TB", "PB"); $pos = 0; while ($size >= 1024) { $size /= 1024; $pos++; } return round($size,$dec)." ".$a[$pos]; } function testwrite($d){ $tfile = '_wk.txt'; $d = ereg_replace('/$','',$d); $fp = @fopen($d.'/'.$tfile,'w'); if(!$fp){ return false; }else{ fclose($fp); $rs = @unlink($d.'/'.$tfile); if($rs){ return true; }else{ return false; } } } function gettplname($filename) { switch($filename) { case 'index.html': return '网站首页模板'; break; case 'footer.html': return '网站底部模板'; break; case 'head.html': return '网站头部模板'; break; case 'search.html': return '搜索页模板'; break; case 'article_article.html': return '文章模型文章页'; break; case 'article_list.html': return '文章模型列表页'; break; case 'guestbook.html': return '留言本模板'; break; case 'guestbook_nopl.html': return '留言本空白xml'; break; case 'guestbook_pl.html': return '留言本xml'; break; case 'pl_pl.html': return '评论页xml'; break; case 'pl_nopl.html': return '评论页空白xml'; break; case 'guestbook_pl.html': return '留言本xml'; break; case 'vote.html': return '投票页模板'; break; } $f = explode('.',$filename); switch($f[1]) { case 'js': return 'js脚本文件'; break; case 'php': return 'php脚本文件'; break; case 'css': return '层叠样式表'; break; case 'jpg': return 'jpg图片'; break; case 'gif': return 'gif图片'; break; case 'png': return 'png图片'; break; case 'zip': return 'zip压缩包'; break; case 'rar': return 'rar压缩包'; break; case 'html': return '模板文件'; break; case 'htm': return '网页文件'; break; case 'ico': return 'ico图标'; break; case 'wmv': return 'wmv视频文件'; break; case 'swf': return 'flash文件'; break; case 'wma': return 'wma音频文件'; break; case 'mp3': return 'mp3音频文件'; break; case 'flv': return 'flv视频文件'; break; case 'mp4': return 'mp4视频文件'; break; default: return '未知文件'; break; } } function show_field($type,$name,$value="",$option="",$css=""){ switch($type){ case 0: echo "<input type=\"text\" name=\"{$name}\" id=\"{$name}\" value=\"{$value}\" {$css} />"; break; case 1: echo "<textarea name=\"{$name}\" {$css}>{$value}</textarea>"; break; case 2: echo "<script>KindEditor.ready(function(K) {K.create(\"#{$name}\",{ afterBlur: function(){ this.sync(); }});});</script><textarea id=\"{$name}\" name=\"{$name}\" style=\"width:700px;height:300px;\" {$css}>{$value}</textarea>"; break; case 3: if($option != '') { echo "<select name=\"{$name}\" {$css}>"; $arr = explode(",",$option); for($i=0;$i<count($arr);$i++) { $select =''; $temp = explode("|",$arr[$i]); if(count($temp) == 2){ if($temp[1] == $value){ $select = 'selected="selected"'; } echo "<option value=\"".$temp[1]."\" $select>".$temp[0]."</option>"; } else if(count($temp) == 1){ if($temp[0] == $value){$select = 'selected="selected"';} echo "<option value=\"".$temp[0]."\" $select>".$temp[0]."</option>"; } } echo "</select>"; } break; case 4: if($option != '') { $arr = explode(",",$option); for($i=0;$i<count($arr);$i++) { $select =''; $temp = explode("|",$arr[$i]); if(count($temp) == 2){ if($temp[1] == $value){$select = 'checked="checked"';} echo "<input name=\"{$name}\" type=\"radio\" value=\"".$temp[1]."\" $select {$css}/>".$temp[0]."&nbsp;"; } else if(count($temp) == 1){ if($temp[0] == $value){$select = 'checked="checked"';} echo "<input name=\"{$name}\" type=\"radio\" value=\"".$temp[0]."\" $select {$css}/>".$temp[0]."&nbsp;"; } } } break; case 5: if($option != '') { echo "<select name=\"{$name}[]\" size=\"4\" multiple=\"multiple\" {$css}>"; $arr = explode(",",$option); $value_arr = explode(",",$value); for($i=0;$i<count($arr);$i++) { $select =''; $temp = explode("|",$arr[$i]); if(count($temp) == 2){ if(in_array($temp[1],$value_arr)){$select = 'selected="selected"';} echo "<option value=\"".$temp[1]."\" $select>".$temp[0]."</option>"; } else if(count($temp) == 1){ if(in_array($temp[0],$value_arr)){$select = 'selected="selected"';} echo "<option value=\"".$temp[0]."\" $select>".$temp[0]."</option>"; } } echo "</select>"; } break; case 6: if($option != '') { $arr = explode(",",$option); $value_arr = explode(",",$value); for($i=0;$i<count($arr);$i++) { $select =''; $temp = explode("|",$arr[$i]); if(count($temp) == 2){ if(in_array($temp[1],$value_arr)){$select = 'checked="checked"';} echo "<input name=\"{$name}[]\" type=\"checkbox\" value=\"".$temp[1]."\" $select {$css}/>".$temp[0]."&nbsp;"; } else if(count($temp) == 1){ if(in_array($temp[0],$value_arr)){$select = 'checked="checked"';} echo "<input name=\"{$name}[]\" type=\"checkbox\" value=\"".$temp[0]."\" $select {$css}/>".$temp[0]."&nbsp;"; } } } break; case 7: echo "<script>KindEditor.ready(function(K){var editor = K.editor({allowFileManager : true});K(\"#insertfile_{$name}\").click(function() {					editor.loadPlugin(\"insertfile\", function() {editor.plugin.fileDialog({fileUrl : K(\"#{$name}\").val(),clickFn : function(url, title) {								K(\"#{$name}\").val(url);editor.hideDialog();}});});});});</script><input type=\"text\" id=\"{$name}\" name=\"{$name}\" value=\"{$value}\" {$css}/> <input type=\"button\" id=\"insertfile_{$name}\" value=\"选择文件\" />"; break; } } function list_extend_field($typeid){ $extend_field =M('extend_show')->join(C('DB_PREFIX').'extend_fieldes on '.C('DB_PREFIX').'extend_show.field_id='.C('DB_PREFIX').'extend_fieldes.field_id')->where(C('DB_PREFIX').'extend_show.is_show=1 and '.C('DB_PREFIX').'extend_show.typeid='.$typeid)->field(C('DB_PREFIX').'extend_fieldes.*')->order(C('DB_PREFIX').'extend_fieldes.orders')->select(); return $extend_field; } return array ( 'app_debug' => false, 'app_domain_deploy' => false, 'app_sub_domain_deploy' => false, 'app_plugin_on' => false, 'app_file_case' => false, 'app_group_depr' => '.', 'app_group_list' => '', 'app_autoload_reg' => false, 'app_autoload_path' => 'Think.Util.', 'app_config_list' => array ( 0 => 'taglibs', 1 => 'routes', 2 => 'tags', 3 => 'htmls', 4 => 'modules', 5 => 'actions', ), 'cookie_expire' => 3600, 'cookie_domain' => '', 'cookie_path' => '/', 'cookie_prefix' => 'BkGOp9578O_', 'default_app' => '@', 'default_group' => 'Home', 'default_module' => 'Index', 'default_action' => 'index', 'default_charset' => 'utf8', 'default_timezone' => 'PRC', 'default_ajax_return' => 'JSON', 'default_theme' => 'default', 'default_lang' => 'zh-cn', 'db_type' => 'mysql', 'db_host' => 'localhost', 'db_name' => '3gcms_php', 'db_user' => 'root', 'db_pwd' => 'firmy', 'db_port' => '3306', 'db_prefix' => '3gcms_', 'db_suffix' => '', 'db_fieldtype_check' => false, 'db_fields_cache' => true, 'db_charset' => 'utf8', 'db_deploy_type' => 0, 'db_rw_separate' => false, 'data_cache_time' => -1, 'data_cache_compress' => false, 'data_cache_check' => false, 'data_cache_type' => 'File', 'data_cache_path' => './Admin/Runtime/Temp/', 'data_cache_subdir' => false, 'data_path_level' => 1, 'error_message' => '您浏览的页面暂时发生了错误！请稍后再试～', 'error_page' => '', 'html_cache_on' => false, 'html_cache_time' => 60, 'html_read_type' => 0, 'html_file_suffix' => '.shtml', 'lang_switch_on' => false, 'lang_auto_detect' => true, 'log_exception_record' => true, 'log_record' => false, 'log_file_size' => 2097152, 'log_record_level' => array ( 0 => 'EMERG', 1 => 'ALERT', 2 => 'CRIT', 3 => 'ERR', ), 'page_rollpage' => 5, 'page_listrows' => 20, 'session_auto_start' => true, 'show_run_time' => false, 'show_adv_time' => false, 'show_db_times' => false, 'show_cache_times' => false, 'show_use_mem' => false, 'show_page_trace' => false, 'show_error_msg' => true, 'tmpl_engine_type' => 'Think', 'tmpl_detect_theme' => false, 'tmpl_template_suffix' => '.html', 'tmpl_content_type' => 'text/html', 'tmpl_cachfile_suffix' => '.php', 'tmpl_deny_func_list' => 'echo,exit', 'tmpl_parse_string' => '', 'tmpl_l_delim' => '{', 'tmpl_r_delim' => '}', 'tmpl_var_identify' => 'array', 'tmpl_strip_space' => false, 'tmpl_cache_on' => true, 'tmpl_cache_time' => -1, 'tmpl_action_error' => 'Public:success', 'tmpl_action_success' => 'Public:success', 'tmpl_trace_file' => './Core/Tpl/PageTrace.tpl.php', 'tmpl_exception_file' => './Core/Tpl/ThinkException.tpl.php', 'tmpl_file_depr' => '/', 'taglib_begin' => '<', 'taglib_end' => '>', 'taglib_load' => true, 'taglib_build_in' => 'cx', 'taglib_pre_load' => '', 'tag_nested_level' => 3, 'tag_extend_parse' => '', 'token_on' => true, 'token_name' => '__hash__', 'token_type' => 'md5', 'url_case_insensitive' => false, 'url_router_on' => false, 'url_route_rules' => array ( ), 'url_model' => 3, 'url_pathinfo_model' => 2, 'url_pathinfo_depr' => '/', 'url_html_suffix' => '', 'var_group' => 'g', 'var_module' => 'm', 'var_action' => 'a', 'var_router' => 'r', 'var_page' => 'p', 'var_template' => 't', 'var_language' => 'l', 'var_ajax_submit' => 'ajax', 'var_pathinfo' => 's', 'version' => '1.0 Release UTF8', 'user_auth_on' => true, 'user_auth_type' => 2, 'user_auth_key' => 'authId', 'admin_auth_key' => 'administrator', 'user_auth_model' => 'admin', 'auth_pwd_encoder' => 'md5', 'user_auth_gateway' => '/Public/login', 'not_auth_module' => 'Public', 'require_auth_module' => '', 'not_auth_action' => 'verify', 'require_auth_action' => '', 'guest_auth_on' => false, 'guest_auth_id' => 0, 'db_like_fields' => 'title|remark', 'rbac_role_table' => 'wk_role', 'rbac_user_table' => 'wk_role_admin', 'rbac_access_table' => 'wk_access', 'rbac_node_table' => 'wk_node', 'field_type' => array ( 0 => '单行文本(text)', 1 => '多行文本不支持编辑器(textarea)', 2 => '多行文本支持编辑器(htmleditor)', 3 => '下拉列表菜单(select)', 4 => '单选按钮(radio)', 5 => '多选列表(multselect)', 6 => '多选按钮(checkbox)', 7 => '文件上传(file)', ), ); ?>